{"version":3,"sources":["webpack:///./Components/styles/start.styles.ts","webpack:///./Components/styles/season.styles.ts","webpack:///./Components/seasonPicker.tsx","webpack:///./Components/styles/Ingredients.styles.ts","webpack:///./Components/ingredients.tsx","webpack:///./Components/styles/challenge.styles.ts","webpack:///./Components/start.tsx","webpack:///./Components/challenge.tsx","webpack:///./src/pages/index.js"],"names":["startStyle","width","height","backgroundRepeat","backgroundAttachment","backgroundSize","paddingTop","buttonDivStyle","marginTop","marginRight","marginLeft","maxWidth","minWidth","buttonStyle","borderRadius","border","color","padding","fontSize","lineHeight","titleStyle","marginBottom","textAlign","fontWeight","backgroundColor","seasonStyle","seasonButtonStyle","float","boxSizing","MozBoxSizing","WebkitBoxSizing","seasonSelectButtonStyle","SeasonPicker","props","style","currentSeason","Season","Spring","onClick","e","setSeason","Summer","Fall","Winter","challengeTitleStyle","challengeStyle","ingredientsStyle","ingredientAreaStyle","WebkitColumnCount","WebkitColumnGap","MozColumnCount","MozColumnGap","columnCount","columnGap","backButtonStyle","background","nextButtonStyle","Ingredients","options","Protein","Vegetable","Method","Carb","Herbs","Bonus","setPage","Pages","Home","setBackground","Background","Challenge","resetButtonDivStyle","stopButtonStyle","resetButtonStyle","useState","timeLeft","setTimeLeft","startCounter","setStartCounter","time","secondsToTime","secs","divisor_for_minutes","divisor_for_seconds","Math","floor","ceil","useEffect","timer","setInterval","clearInterval","h","m","s","Start","page","setOptions","season","backgroundImage","fetch","method","headers","then","res","json","data","console","log","getOptions","IndexPage"],"mappings":"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","file":"component---src-pages-index-js-7bdad3853bb88f963ac8.js","sourcesContent":["import CSS from 'csstype';\r\n\r\nexport const startStyle: CSS.Properties = {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundAttachment: 'fixed',\r\n    backgroundSize: 'cover',\r\n    paddingTop: '40vh'\r\n}\r\n\r\nexport const buttonDivStyle: CSS.Properties = {\r\n    marginTop: '2.5vh',\r\n    marginRight: '40vw',\r\n    marginLeft: '40vw',\r\n    maxWidth: '20vw',\r\n    minWidth: '100px',\r\n}\r\n\r\nexport const buttonStyle: CSS.Properties = {\r\n    width: '100%',\r\n    borderRadius: '30px',\r\n    border: '2px solid black',\r\n    color: 'black',\r\n    padding: '0.25em 1em',\r\n    fontSize: '30px',\r\n    lineHeight: '35px',\r\n}\r\n\r\nexport const titleStyle: CSS.Properties = {\r\n    marginBottom: '2.5vh',\r\n    marginRight: '20vw',\r\n    marginLeft: '20vw',\r\n    maxWidth: '60vw',\r\n    minWidth: '500px',\r\n    color: 'black',\r\n    fontSize: '55px',\r\n    lineHeight: '65px',\r\n    textAlign: \"center\",\r\n    fontWeight: 'bolder',\r\n    backgroundColor: 'hsla(0, 0%, 100%, 0.7)',\r\n}\r\n","import CSS from 'csstype';\r\n\r\nexport const seasonStyle: CSS.Properties = {\r\n    marginTop: '2.5vh',\r\n    marginRight: '37vw',\r\n    marginLeft: '37vw',\r\n    maxWidth: '26vw',\r\n    minWidth: '100px',\r\n    color: 'blue',\r\n    height: '20px'\r\n}\r\n\r\nexport const seasonButtonStyle: CSS.Properties = {\r\n    backgroundColor: 'white',\r\n    float: 'left',\r\n    width: '24%',\r\n    color: 'black',\r\n    padding: '0.25em 0.5em',\r\n    fontSize: '14px',\r\n    lineHeight: '16px',\r\n    borderRadius: '15px',\r\n    border: '2px solid black',\r\n    textAlign: 'center',\r\n    boxSizing: \"border-box\",\r\n    MozBoxSizing: \"border-box\",\r\n    WebkitBoxSizing: \"border-box\",\r\n    marginRight: '0.25vw'\r\n}\r\n\r\nexport const seasonSelectButtonStyle: CSS.Properties = {\r\n    float: 'left',\r\n    width: '24%',\r\n    backgroundColor: 'black',\r\n    color: 'white',\r\n    padding: '0.25em 0.5em',\r\n    fontSize: '14px',\r\n    lineHeight: '16px',\r\n    borderRadius: '15px',\r\n    border: '2px solid black',\r\n    textAlign: 'center',\r\n    boxSizing: \"border-box\",\r\n    MozBoxSizing: \"border-box\",\r\n    WebkitBoxSizing: \"border-box\",\r\n    marginRight: '0.25vw'\r\n}\r\n","import React, { useState } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport {useStaticQuery, graphql} from 'gatsby'\r\nimport Img, { FixedObject } from \"gatsby-image\"\r\nimport { seasonButtonStyle, seasonSelectButtonStyle, seasonStyle } from \"./styles/season.styles\";\r\nimport { Season } from \"./start\";\r\n\r\nexport interface SeasonProps{\r\n    setSeason:any;\r\n    currentSeason:string;\r\n}\r\n\r\nexport default function SeasonPicker (props: SeasonProps){\r\n\r\n    return(\r\n        <div style={seasonStyle}>\r\n            <div style={props.currentSeason === Season.Spring ? seasonSelectButtonStyle : seasonButtonStyle} onClick = {(e) => props.setSeason(Season.Spring)}>\r\n                Spring\r\n            </div>\r\n            <div style={props.currentSeason === Season.Summer ? seasonSelectButtonStyle : seasonButtonStyle} onClick = {(e) => props.setSeason(Season.Summer)}>\r\n                Summer\r\n            </div>\r\n            <div style={props.currentSeason === Season.Fall ? seasonSelectButtonStyle : seasonButtonStyle} onClick = {(e) => props.setSeason(Season.Fall)}>\r\n                Fall\r\n            </div>\r\n            <div style={props.currentSeason === Season.Winter ? seasonSelectButtonStyle : seasonButtonStyle} onClick = {(e) => props.setSeason(Season.Winter)}>\r\n                Winter\r\n            </div>\r\n        </div>\r\n    );\r\n}","import CSS from 'csstype';\r\n\r\nexport const challengeTitleStyle: CSS.Properties = {\r\n    marginBottom: '2.5vh',\r\n    marginRight: '30vw',\r\n    marginLeft: '30vw',\r\n    maxWidth: '40vw',\r\n    minWidth: '500px',\r\n    color: 'black',\r\n    fontSize: '55px',\r\n    lineHeight: '65px',\r\n    textAlign: \"center\",\r\n    fontWeight: 'bolder',\r\n    backgroundColor: 'hsla(0, 0%, 100%, 0.7)',\r\n}\r\n\r\nexport const challengeStyle: CSS.Properties = {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundAttachment: 'fixed',\r\n    backgroundSize: 'cover',\r\n    paddingTop: '30vh'\r\n}\r\n\r\nexport const ingredientsStyle: CSS.Properties = {\r\n    backgroundColor: 'pink',\r\n    float: 'left',\r\n    marginLeft: '25%',\r\n    marginRight: '15%',\r\n    width: '200px',\r\n    height: '125px',\r\n    color: 'black',\r\n    padding: '0.25em 0.5em',\r\n    fontSize: '20px',\r\n    fontWeight: 'bolder',\r\n    lineHeight: '50px',\r\n    borderRadius: '50%',\r\n    border: '2px solid black',\r\n    textAlign: 'center',\r\n    boxSizing: \"border-box\",\r\n    MozBoxSizing: \"border-box\",\r\n    WebkitBoxSizing: \"border-box\",\r\n    marginBottom: '2vh',\r\n}\r\n\r\nexport const ingredientAreaStyle: CSS.Properties = {\r\n    marginTop: '2.5vh',\r\n    marginRight: '20vw',\r\n    marginLeft: '20vw',\r\n    maxWidth: '60vw',\r\n    minWidth: '100px',\r\n    color: 'blue',\r\n    height: '25vh',\r\n    WebkitColumnCount: 3,\r\n    WebkitColumnGap: '0.25vw',\r\n    MozColumnCount: 3,\r\n    MozColumnGap: '0.25vw',\r\n    columnCount: 3,\r\n    columnGap: '0.25vw',\r\n}\r\n\r\nexport const buttonDivStyle: CSS.Properties = {\r\n    height: '100px',\r\n    marginTop: '2vh',\r\n    marginRight: '37.5vw',\r\n    marginLeft: '37.5vw',\r\n    maxWidth: '25vw',\r\n    minWidth: '100px',\r\n}\r\n\r\nexport const backButtonStyle: CSS.Properties = {\r\n    float: 'left',\r\n    width: '11.5vw',\r\n    background: 'hsl(0,100%,50%,0.7)',\r\n    borderRadius: '30px',\r\n    border: '2px solid red',\r\n    color: 'black',\r\n    padding: '0.25em 1em',\r\n    fontSize: '30px',\r\n    fontWeight: 'bolder',\r\n    lineHeight: '35px',\r\n    marginRight: '2vw'\r\n}\r\n\r\nexport const nextButtonStyle: CSS.Properties = {\r\n    float: 'left',\r\n    width: '11.5vw',\r\n    borderRadius: '30px',\r\n    border: '2px solid green',\r\n    color: 'black',\r\n    padding: '0.25em 1em',\r\n    fontSize: '30px',\r\n    lineHeight: '35px',\r\n    fontWeight: 'bolder',\r\n    background: 'hsl(120,100%,25%,0.7)',\r\n}","import React, { useState } from \"react\"\r\nimport { Background, Pages } from \"./start\";\r\nimport { buttonDivStyle, backButtonStyle, challengeStyle, challengeTitleStyle, ingredientAreaStyle, ingredientsStyle, nextButtonStyle } from \"./styles/Ingredients.styles\";\r\n\r\n\r\nexport interface IngredientsProps{\r\n    options:any;\r\n    setPage:any;\r\n    setBackground:any;\r\n}\r\n\r\nexport default function Ingredients (props: IngredientsProps){\r\n\r\n    return(\r\n        <div style={challengeStyle}>\r\n            <div style={challengeTitleStyle}>\r\n                Your ingredients are:\r\n            </div>\r\n            <div style={ingredientAreaStyle}>\r\n                <div style={ingredientsStyle}>\r\n                    Protein:<br/> {props.options.Protein}\r\n                </div >\r\n                <div style={ingredientsStyle}>\r\n                    Vegetable:<br/> {props.options.Vegetable}\r\n                </div>\r\n                <div style={ingredientsStyle}>\r\n                Method:<br/> {props.options.Method}\r\n                </div>\r\n                <div style={ingredientsStyle}>\r\n                    Carb:<br/> {props.options.Carb}\r\n                </div>\r\n                <div style={ingredientsStyle}>\r\n                    Herbs:<br/> {props.options.Herbs}\r\n                </div>\r\n                <div style={ingredientsStyle}>\r\n                    Bonus:<br/> {props.options.Bonus}\r\n                </div>\r\n            </div>\r\n            <div style={buttonDivStyle}>\r\n                <button style={backButtonStyle} onClick={(e) => {\r\n                        props.setPage(Pages.Home)\r\n                        props.setBackground(Background.Home)\r\n                    }\r\n                }>\r\n                    Back\r\n                </button>\r\n                <button style={nextButtonStyle} onClick={(e) => \r\n                    {\r\n                        props.setPage(Pages.Challenge)\r\n                        props.setBackground(Background.Challenge)\r\n                    }\r\n                }>\r\n                    Next\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import CSS from 'csstype';\r\n\r\nexport const challengeTitleStyle: CSS.Properties = {\r\n    marginBottom: '2.5vh',\r\n    marginRight: '32vw',\r\n    marginLeft: '32vw',\r\n    maxWidth: '35vw',\r\n    minWidth: '500px',\r\n    color: 'black',\r\n    fontSize: '55px',\r\n    lineHeight: '65px',\r\n    textAlign: \"center\",\r\n    fontWeight: 'bolder',\r\n    backgroundColor: 'hsla(0, 0%, 100%, 0.7)',\r\n}\r\n\r\nexport const challengeStyle: CSS.Properties = {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundAttachment: 'fixed',\r\n    backgroundSize: 'cover',\r\n    paddingTop: '40vh'\r\n}\r\n\r\nexport const buttonDivStyle: CSS.Properties = {\r\n    height: '70px',\r\n    marginTop: '2.5vh',\r\n    marginRight: '37.5vw',\r\n    marginLeft: '37.5vw',\r\n    maxWidth: '25vw',\r\n    minWidth: '100px',\r\n}\r\n\r\nexport const resetButtonDivStyle: CSS.Properties = {\r\n    height: '50px',\r\n    marginTop: '0vh',\r\n    marginRight: '44.25vw',\r\n    marginLeft: '44.25vw',\r\n    maxWidth: '11.5vw',\r\n    minWidth: '100px',\r\n}\r\n\r\nexport const backButtonStyle: CSS.Properties = {\r\n    float: 'left',\r\n    width: '11.5vw',\r\n    background: 'hsl(0,100%,50%,0.7)',\r\n    borderRadius: '30px',\r\n    border: '2px solid red',\r\n    color: 'black',\r\n    padding: '0.25em 1em',\r\n    fontSize: '30px',\r\n    fontWeight: 'bolder',\r\n    lineHeight: '35px',\r\n    marginRight: '2vw'\r\n}\r\n\r\nexport const nextButtonStyle: CSS.Properties = {\r\n    float: 'left',\r\n    width: '11.5vw',\r\n    borderRadius: '30px',\r\n    border: '2px solid green',\r\n    color: 'black',\r\n    padding: '0.25em 1em',\r\n    fontSize: '30px',\r\n    lineHeight: '35px',\r\n    fontWeight: 'bolder',\r\n    background: 'hsl(120,100%,25%,0.7)',\r\n}\r\n\r\nexport const stopButtonStyle: CSS.Properties = {\r\n    float: 'left',\r\n    width: '11.5vw',\r\n    background: 'hsl(0,100%,50%,0.7)',\r\n    borderRadius: '30px',\r\n    border: '2px solid red',\r\n    color: 'black',\r\n    padding: '0.25em 1em',\r\n    fontSize: '30px',\r\n    fontWeight: 'bolder',\r\n    lineHeight: '35px',\r\n}\r\n\r\nexport const resetButtonStyle: CSS.Properties = {\r\n    float: 'left',\r\n    width: '11.5vw',\r\n    background: 'hsl(200,100%,50%,0.7)',\r\n    borderRadius: '30px',\r\n    border: '2px solid blue',\r\n    color: 'black',\r\n    padding: '0.25em 1em',\r\n    fontSize: '30px',\r\n    fontWeight: 'bolder',\r\n    lineHeight: '35px',\r\n}","import React, { useState } from \"react\"\r\nimport { buttonDivStyle, buttonStyle, startStyle, titleStyle } from \"./styles/start.styles\";\r\nimport SeasonPicker from \"./seasonPicker\";\r\nimport Ingredients from \"./ingredients\";\r\nimport Challenge from \"./challenge\";\r\n\r\nexport interface StartProps{\r\n\r\n}\r\n\r\nexport enum Pages {\r\n    Home = \"Home\",\r\n    Ingredients = \"Ingredients\",\r\n    Challenge = \"Challenge\"\r\n  }\r\n\r\nexport enum Season {\r\n    Summer = \"Summer\",\r\n    Spring = \"Spring\",\r\n    Fall = \"Fall\",\r\n    Winter = \"Winter\"\r\n  }\r\n\r\nexport enum Background {\r\n    Home = 'url(background2.png)',\r\n    Ingredients = 'url(background3.png)',\r\n    Challenge = 'url(background4.png)'\r\n}\r\n\r\n\r\nexport default function Start (props: StartProps){\r\n\r\n    const [page, setPage] = useState(Pages.Home);\r\n    const [options, setOptions] = useState(null);\r\n    const [season, setSeason] = useState(Season.Spring);\r\n    const [background, setBackground] = useState(Background.Home)\r\n\r\n    function getOptions(season:string){\r\n        let url = 'https://fooddice.azurewebsites.net/api/FoodDice?season=' + season\r\n        fetch(url, {\r\n            method: \"GET\",\r\n            headers : {\r\n                \"access-control-allow-origin\" : \"no-cors\"\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            console.log(data)\r\n            setOptions(data)\r\n            setPage(Pages.Ingredients)\r\n            setBackground(Background.Ingredients)\r\n        })\r\n        return 1;\r\n    }\r\n\r\n    return(\r\n    <div style = {\r\n        {\r\n            backgroundImage: background,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover'\r\n        }\r\n    }>\r\n        {\r\n        (page === Pages.Home) &&\r\n        <div style={startStyle}>\r\n            <div style={titleStyle}>\r\n                David and Tati's Food Challenge\r\n            </div>\r\n            <SeasonPicker \r\n            currentSeason = {season}\r\n            setSeason = {setSeason}/>\r\n            <div style={buttonDivStyle}>\r\n                <button style={buttonStyle} onClick={(e) => getOptions(season)}>\r\n                    Start Challenge!\r\n                </button>\r\n            </div>\r\n        </div>\r\n        }\r\n        {\r\n        (page === Pages.Ingredients) &&\r\n        <Ingredients options = {options} setPage = { setPage } setBackground = {setBackground}/>\r\n        }\r\n        {\r\n        (page === Pages.Challenge) &&\r\n        <Challenge setPage = { setPage } setBackground = {setBackground}/>\r\n        }\r\n    </div>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { Background, Pages } from \"./start\";\r\nimport { buttonDivStyle, backButtonStyle, challengeStyle, challengeTitleStyle, nextButtonStyle, stopButtonStyle, resetButtonStyle, resetButtonDivStyle } from \"./styles/challenge.styles\";\r\n\r\n\r\nexport interface ChallengeProps{\r\n    setPage:any;\r\n    setBackground:any;\r\n}\r\n\r\nexport default function Challenge (props: ChallengeProps){\r\n\r\n    const [timeLeft, setTimeLeft] = useState(3600);\r\n    const [startCounter, setStartCounter] = useState(false);\r\n\r\n    let time = secondsToTime(timeLeft) ;\r\n\r\n\r\n    useEffect(() => {\r\n        const timer = timeLeft > 0 && startCounter === true && setInterval(() => {\r\n            setTimeLeft(timeLeft - 1)\r\n            time = secondsToTime(timeLeft)\r\n        }, 1000);\r\n        return () => clearInterval(timer);\r\n      }, [startCounter, timeLeft]);\r\n\r\n    function secondsToTime(secs){\r\n        let hours = Math.floor(secs / (60 * 60));\r\n    \r\n        let divisor_for_minutes = secs % (60 * 60);\r\n        let minutes = Math.floor(divisor_for_minutes / 60);\r\n    \r\n        let divisor_for_seconds = divisor_for_minutes % 60;\r\n        let seconds = Math.ceil(divisor_for_seconds);\r\n    \r\n        let obj = {\r\n          \"h\": hours,\r\n          \"m\": minutes,\r\n          \"s\": seconds\r\n        };\r\n        return obj;\r\n      }\r\n\r\n    return(\r\n        <div style={challengeStyle}>\r\n            <div style={challengeTitleStyle}>\r\n                Time Left: {time.h == 0 ? '00' : time.h}:{time.m == 0 ? '00' : time.m}:{time.s == 0 ? '00' : time.s}\r\n            </div>\r\n            <div style={buttonDivStyle}>\r\n                <button style={backButtonStyle} onClick={(e) => \r\n                    {\r\n                        props.setBackground(Background.Ingredients)\r\n                        props.setPage(Pages.Ingredients)\r\n                    }\r\n                }>\r\n                    Back\r\n                </button>\r\n                {startCounter == false ? \r\n                <button style={nextButtonStyle} onClick={(e) => {\r\n                    setStartCounter(true);\r\n                }}>\r\n                    Start\r\n                </button> \r\n                : \r\n                <button style={stopButtonStyle} onClick={(e) => {\r\n                    setStartCounter(false);\r\n                }}>\r\n                    Stop\r\n                </button>}\r\n            </div>\r\n            <div style={resetButtonDivStyle}>\r\n                { timeLeft < 3600 ? <button style={resetButtonStyle} onClick={(e) => {\r\n                        setStartCounter(false);\r\n                        setTimeLeft(3600);\r\n                    }}>\r\n                        Reset\r\n                </button> : 1}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import * as React from \"react\"\r\nimport Start from \"../../Components/start\"\r\nimport \"../../Components/styles/index.css\"\r\n\r\n// markup\r\nconst IndexPage = () => {\r\n  return (\r\n    <Start/>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}